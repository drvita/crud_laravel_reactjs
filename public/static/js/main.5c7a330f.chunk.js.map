{"version":3,"sources":["components/user/Login.jsx","components/user/add.jsx","components/user/dashboard.jsx","components/App.jsx","index.js"],"names":["App","props","changeform","e","target","value","name","setState","getToken","body","email","state","password","console","log","load","fetch","method","JSON","stringify","headers","Accept","then","res","ok","Error","json","response","data","logreturn","token","catch","message","error","this","className","type","onChange","onClick","Component","Add","cancel","relod","setUser","id","url","length","Authorization","user","Dashboard","closeSesion","window","confirm","editUser","form","deleteUser","a","back","status","getUsers","reloadForm","users","map","logReturnChange","val","login","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c7a330f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      load: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { email, password, load } = this.state;\r\n    return (\r\n      <div className=\"row justify-content-md-center mt-4\">\r\n        <div className=\"col-sm-12 col-lg-6 col-md-8\">\r\n          <h4 className=\"card-title\">Sistema de usuarios</h4>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h5>Inicio de session</h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"form-group\">\r\n                <label>Correo electronico</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  className=\"form-control\"\r\n                  value={email}\r\n                  onChange={this.changeform}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"form-control\"\r\n                  value={password}\r\n                  onChange={this.changeform}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer text-right\">\r\n              <button\r\n                type=\"submit\"\r\n                className={load ? \"btn btn-dark disabled\" : \"btn btn-dark\"}\r\n                onClick={this.getToken}\r\n              >\r\n                Iniciar session\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  changeform = (e) => {\r\n    const { value, name } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  getToken = () => {\r\n    const body = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    console.log(\"INICIANDO LOGIN\", body.email);\r\n    this.setState({\r\n      load: true,\r\n    });\r\n\r\n    fetch(\"http://localhost:3001/api/user/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(res);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          console.log(\"[Login] Credenciales validadas\", response);\r\n          this.props.logreturn(true, response.data.token);\r\n        } else {\r\n          this.setState({\r\n            load: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((message) => {\r\n        console.error(\"[Login] Error de conexion con el servidor\\n\", message);\r\n        this.setState({\r\n          load: false,\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Add extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { name, email, id } = props.user;\r\n    this.state = {\r\n      id: id ? id : 0,\r\n      name: name ? name : \"\",\r\n      email: email ? email : \"\",\r\n      password: \"\",\r\n      load: false,\r\n      token: props.token,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(props, state) {\r\n    if (this.props.user.id && props.user.id !== this.props.user.id) {\r\n      const { name, email, id } = this.props.user;\r\n      console.log(\"[Add user] UPDATE!!!\");\r\n      this.setState({\r\n        id,\r\n        name,\r\n        email,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, name, email, password, load } = this.state;\r\n    return (\r\n      <div className=\"card bg-secondary text-white\">\r\n        <div className=\"card-header\">\r\n          <h5>\r\n            <i className=\"fas fa-user mr-2\"></i>{\" \"}\r\n            {id ? \"Actualizar usuario\" : \"Registro de nuevo usuario\"}\r\n          </h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"form-group\">\r\n            <label>Nombre</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className=\"form-control\"\r\n              value={name}\r\n              onChange={this.changeform}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Correo electronico</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              value={email}\r\n              onChange={this.changeform}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n              onChange={this.changeform}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer text-right\">\r\n          <button\r\n            type=\"submit\"\r\n            className={load ? \"btn btn-dark disabled\" : \"btn btn-dark\"}\r\n            onClick={this.cancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className={load ? \"btn btn-dark disabled\" : \"btn btn-primary\"}\r\n            onClick={this.setUser}\r\n          >\r\n            {id ? \"Actualizar\" : \"Guardar\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  cancel = () => {\r\n    this.props.relod();\r\n  };\r\n  changeform = (e) => {\r\n    const { value, name } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  setUser = () => {\r\n    const { token, id } = this.state,\r\n      url = id\r\n        ? \"http://localhost:3001/api/user/\" + id\r\n        : \"http://localhost:3001/api/user\";\r\n    let body = {\r\n      email: this.state.email,\r\n      name: this.state.name,\r\n    };\r\n\r\n    if (this.state.password.length) body[\"password\"] = this.state.password;\r\n\r\n    console.log(\"[Form add user] Enviando datos de usuario: \", body.email);\r\n    this.setState({\r\n      load: true,\r\n    });\r\n\r\n    fetch(url, {\r\n      method: id ? \"PUT\" : \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(res);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          console.log(\"[Form add user] Usuario almacenado con exito\");\r\n          this.props.relod();\r\n        } else {\r\n          this.setState({\r\n            load: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((message) => {\r\n        console.error(\r\n          \"[Form add user] Error de conexion con el servidor\\n\",\r\n          message\r\n        );\r\n        this.setState({\r\n          load: false,\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FormNew from \"./add\";\r\n\r\nexport default class Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      load: false,\r\n      users: [],\r\n      form: false,\r\n      token: props.token,\r\n      user: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  componentDidUpdate(props, state) {\r\n    if (state.form !== this.state.form) {\r\n      console.log(\"[Dashboard] UPDATE!!!\");\r\n      this.getUsers();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { load, users, form, user, token } = this.state;\r\n    return (\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col\">\r\n          <h4 className=\"card-title\">\r\n            <i className=\"fas fa-users mr-2\"></i>\r\n            <span className=\"mr-4\">Sistema de usuarios</span>\r\n            <span className=\"badge badge-secondary\" onClick={this.closeSesion}>\r\n              [Cerrar sesion]\r\n            </span>\r\n          </h4>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h5>\r\n                <i className=\"fas fa-table mr-2\"></i>{\" \"}\r\n                <span className=\"mr-4\">Tabla de usuarios</span>\r\n                {load ? <small>Cargando...</small> : null}\r\n              </h5>\r\n            </div>\r\n            <div className=\"card-body table-responsive\">\r\n              <table className=\"table table-sm \">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nombre</th>\r\n                    <th>Correo electronico</th>\r\n                    <th>Password</th>\r\n                    <th>Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {users.map((user) => {\r\n                    return (\r\n                      <tr key={user.id}>\r\n                        <td>\r\n                          <i className=\"fas fa-user mr-2\"></i> {user.name}\r\n                        </td>\r\n                        <td>{user.email}</td>\r\n                        <td>************</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"fas fa-trash mr-2\"\r\n                            onClick={(e) => this.deleteUser(user.id, user.name)}\r\n                          ></i>\r\n                          <i\r\n                            className=\"fas fa-pencil-alt mr-2\"\r\n                            onClick={(e) => this.editUser(user)}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {form ? null : (\r\n              <div className=\"card-footer text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className={load ? \"btn btn-dark disabled\" : \"btn btn-dark\"}\r\n                  onClick={this.setUser}\r\n                >\r\n                  <i className=\"fas fa-user mr-2\"></i> Nuevo usuario\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {form ? (\r\n          <div className=\"col-sm-12 col-lg-4 col-md-12 mt-1\">\r\n            <FormNew token={token} relod={this.reloadForm} user={user} />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  closeSesion = () => {\r\n    if (window.confirm(\"Esta seguro de cerrar la sesion?\")) {\r\n      this.props.logreturn(false, \"\");\r\n    }\r\n  };\r\n  editUser = (user) => {\r\n    this.setState({\r\n      form: true,\r\n      user,\r\n    });\r\n  };\r\n  deleteUser = (id, name) => {\r\n    const { token } = this.state;\r\n    console.log(\"[Dashboard] Eliminando usuario:\", id);\r\n\r\n    if (window.confirm(\"Esta seguro de eliminar al usuario: '\" + name + \"'\")) {\r\n      this.setState({\r\n        load: true,\r\n      });\r\n      fetch(\"http://localhost:3001/api/user/\" + id, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n        .then(async (response) => {\r\n          let back = {};\r\n          if (response.status !== 204) back = await response.json();\r\n          if (!response.ok) {\r\n            throw new Error(back.message);\r\n          }\r\n          return back;\r\n        })\r\n        .then((response) => {\r\n          console.log(\r\n            \"[Dashboard] Usuario eliminado\",\r\n            response,\r\n            this.state.load\r\n          );\r\n          this.getUsers();\r\n        })\r\n        .catch((message) => {\r\n          console.error(\r\n            \"[Dashboard] Error de conexion con el servidor\\n\",\r\n            message\r\n          );\r\n          this.setState({\r\n            load: false,\r\n          });\r\n        });\r\n    }\r\n  };\r\n  reloadForm = () => {\r\n    this.setState({\r\n      form: false,\r\n      load: false,\r\n      user: {},\r\n    });\r\n  };\r\n  setUser = () => {\r\n    this.setState({\r\n      form: !this.state.form,\r\n    });\r\n  };\r\n  getUsers = () => {\r\n    const { token } = this.state;\r\n    console.log(\"[Dashboard] Descargando usuarios\");\r\n    this.setState({\r\n      load: true,\r\n    });\r\n\r\n    fetch(\"http://localhost:3001/api/user\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(res);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          console.log(\"[Dashboard] Usuarios descargandos\", response.data);\r\n          this.setState({\r\n            load: false,\r\n            users: response.data,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            load: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((message) => {\r\n        console.error(\r\n          \"[Dashboard] Error de conexion con el servidor\\n\",\r\n          message\r\n        );\r\n        this.setState({\r\n          load: false,\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\nimport LoginForm from \"./user/Login\";\nimport Dashboard from \"./user/dashboard\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      login: false,\n      token: \"\",\n    };\n  }\n\n  render() {\n    const { login, token } = this.state;\n    return (\n      <div className=\"container\">\n        {login ? (\n          <Dashboard\n            login={this.logReturnChange}\n            token={token}\n            logreturn={this.logReturnChange}\n          />\n        ) : (\n          <LoginForm logreturn={this.logReturnChange} />\n        )}\n      </div>\n    );\n  }\n\n  logReturnChange = (val, token) => {\n    this.setState({\n      login: Boolean(val),\n      token,\n    });\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}